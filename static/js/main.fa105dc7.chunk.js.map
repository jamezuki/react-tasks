{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","title","onAdd","showAdd","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","_id","cursor","date","Tasks","tasks","map","AddTask","useState","setText","setDate","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","id","deleteTask","method","filter","toggleReminder","taskToToggle","updatedTask","headers","body","JSON","stringify","addTask","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa105dc7.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n  const style = {\n    backgroundColor: color,\n  }\n\n  return (\n    <button className=\"btn\" style={style} onClick={onClick}>\n      {text}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  color: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Hide' : 'Add'} onClick={onAdd} />\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  const styleFaTimes = {\n    color: 'red',\n    cursor: 'pointer',\n  }\n\n  return (\n    <div\n      className={`task ${task.reminder ? 'reminder' : ''}`}\n      onDoubleClick={() => onToggle(task._id)}\n    >\n      <h3>\n        {task.text} <FaTimes style={styleFaTimes} onClick={() => onDelete(task._id)} />\n      </h3>\n      <p>{task.date}</p>\n    </div>\n  )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task key={task._id} task={task} onDelete={onDelete} onToggle={onToggle} />\n      ))}\n    </>\n  )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('')\n  const [date, setDate] = useState('')\n  const [reminder, setReminder] = useState(false)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (!text) {\n      alert('Please add a task')\n      return\n    }\n    onAdd({ text, date, reminder })\n    setText('')\n    setDate('')\n    setReminder(false)\n  }\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Date</label>\n        <input\n          type=\"text\"\n          placeholder=\"Date\"\n          value={date}\n          onChange={(e) => setDate(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  )\n}\n\nexport default AddTask\n","import { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  const fetchTasks = async () => {\n    const res = await fetch('https://jamezuki-express-tasks.herokuapp.com/tasks')\n    const data = await res.json()\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`https://jamezuki-express-tasks.herokuapp.com/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  const deleteTask = async (id) => {\n    await fetch(`https://jamezuki-express-tasks.herokuapp.com/tasks/${id}`, {\n      method: 'DELETE',\n    })\n    setTasks(tasks.filter((task) => task._id !== id))\n  }\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n    const res = await fetch(`https://jamezuki-express-tasks.herokuapp.com/tasks/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updatedTask),\n    })\n    const data = await res.json()\n    setTasks(tasks.map((task) => (task._id === id ? { ...task, reminder: data.reminder } : task)))\n  }\n\n  const addTask = async (task) => {\n    const res = await fetch('https://jamezuki-express-tasks.herokuapp.com/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n    const data = await res.json()\n    setTasks([...tasks, data])\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'No Tasks to Show'\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}